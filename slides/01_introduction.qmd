---
title: "Introduction"
author: "Sebastian Stier"
lesson: 1
institute: University of Mannheim & GESIS
date: "2023-02-14"
date-format: "YYYY-MM-DD"
footer: "[Computational Social Science and Digital Behavioral Data, University of Mannheim](https://sebastianstier.com/ma_css24/)"
format: fakegesis-revealjs
---

## About me

- Dr. in Political Science in 2016 at the University of Heidelberg
- Since 2016, Postdoc/Senior Researcher at GESIS -- Leibniz Institute for the Social Sciences
- No R or programming training during my studies
- Since 2023 Scientific Director Department Computation Social Science, GESIS -- Leibniz Institute for the Social Sciences & Professor of Computation Social Science

## My research interests

::: {#my-image .center}
![](../material/img/network_sst)
:::


## About you

- Who are you?
- What's your study program and which semester are you in?
- What are your experiences with programming? If applicable, which R packages have you used?
- What are your motivations for taking the class?
- Why this course? Which topics/methods/data do you want to learn more about?


## Learning objectives

- Advanced understanding of concepts, methods, data used and challenges in CSS
- Critical reflection of the applicability of CSS in social science research
- Learning to use CSS methods in R
- Application of CSS methods in R for own research question


## Modus operandi in the class
- Required reading: (mostly) applications
- We'll discuss these papers in the class
- We'll code in the class $\rightarrow$ please bring your laptop
- Questions are always possible, this is supposed to be interactive 


## Requirements for examination/grades
- Regular participation in class
- Writing a review of the two required readings for **two** classes to be submitted on Monday before the selected sessions (*Studienleistung/Coursework*)
- Presentation of your own research idea for your term paper in the last session on 22 May 2024
- Written term paper based on an analysis in R (max. 5,000 words), deadline: 31 July 2024 (*PrÃ¼fungsleistung/Examination*)


## Information management and communication
- Slides and materials will be available online: [http://sebastianstier.com/ma_css24/](http://sebastianstier.com/ma_css24)
- Data might be shared via Cryptshare
- Submit reviews for class and term paper to [sebastian.stier@gesis.org](mailto:sebastian.stier@gesis.org)
- Communication
    - Via [sebastian.stier@gesis.org](mailto:sebastian.stier@gesis.org)
    - In person after the class
    - Via Zoom


## Format of reviews
- Review of the two required readings needs to be submitted before **two** classes of the semester
- Some questions you could ask:

::: {style="font-size: 90%;"}
    - Describe what problem or question these papers address and the main contributions that they make towards a solution or answer. 
    
    - Reflect on the main strengths and weaknesses of these papers.
    
    - What are the concepts, hypothesized social mechanisms and operationalizations used in the papers?
    
    - What are the data in use? How are the data analyzed? Does this seem appropriate?
    
    - How convincing do you find the arguments presented by the authors? Are the conclusions backed up by the empirical results?
    
    - Do you see any ethical concerns?
    
    - How do you judge the replicability of these papers?
    
    - If applicable, are there commonalities or differences between the two papers?
    
:::

## Format of term paper (~5,000 words)
- Brief motivation and research question
- Concise theoretical overview: for what conceptual and theoretical reasons do I choose these data and methods?
- Research design
- Data and variables
- Method: no detailed mathematical description needed, but why does this method fit my research question and my data?
- Results
- Analysis code as an R script: needs to be fully reproducible


##

```{r, echo=FALSE, warning=FALSE, out.width="80%", message=FALSE}
library(openxlsx)
library(tidyverse)
library(gt)
read.xlsx("../material/data/schedule.xlsx") %>%
    rename(`Required reading` = "Required.reading") %>%
    gt() %>%
    tab_header(md("**Seminar dates and topics**")) %>%
    fmt_markdown(columns = TRUE) %>%
    cols_width(Date ~ px(200),
               Topics ~ px(270),
               Topics ~ px(460)) %>%
    tab_options(data_row.padding = px(5)) %>%
    tab_options(
              # table.font.names = 'Georgia',
              # column_labels.font.weight = 'bold',
                heading.title.font.size = 14,
              # heading.subtitle.font.size = 14,
              # table.font.color = 'steelblue',
              # source_notes.font.size = 10,
              # #source_notes.
                table.font.size = 12)

```


## The elephant in the room: LLMs, ChatGPT et al.

## Heterogeneity of previous 


## Before we get started with coding...


```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|3|5"

library(ggplot2)

mtcars %>% 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y ~ x") +
  theme_minimal()
```

. . .

[https://style.tidyverse.org/index.html](https://style.tidyverse.org/index.html)


:::{.aside}
Switching between formats is THAT easy as long as you do not have any "fancy" features included
:::

## HTML divs and spans with Pandoc

```{.markdown  code-line-numbers="false"}
::: {.class}
Content in a div with a class
:::

Some text with a specific [span]{.span-class}
```

Pandoc translates this to
```{.html code-line-numbers="false"}
<div class="class">
   Content in a div with a class
</div>
Some text with a specific <span class="span-class">span</span>
```

## Incremental lists

```{.markdown code-line-numbers="false"}
:::{.incremental}
- item 1
- item 2
- item 3
:::
```

:::{.incremental}
- item 1
- item 2
- item 3
:::

## Incremental Slides

Use `. . .` syntax  

```{.markdown code-line-numbers="false"}
This appears first 

. . .

This second
```

<br>

. . .

This appears first 

. . .

This second

## Fragments, Basics

```{.markdown code-line-numbers="false"}

::: {.fragment}
Fade in
:::

::: {.fragment .fade-out}
Fade out
:::

::: {.fragment .highlight-red}
Highlight red
:::

::: {.fragment .fade-in-then-out}
Fade in, then out
:::

::: {.fragment .fade-up}
Slide up while fading in
:::
```

## Fragments, Basics

::: {.fragment}
Fade in
:::

::: {.fragment .fade-out}
Fade out
:::

::: {.fragment .highlight-red}
Highlight red
:::

::: {.fragment .fade-in-then-out}
Fade in, then out
:::

::: {.fragment .fade-up}
Slide up while fading in
:::

## Fragments, More

This is an [important sentence!]{.fragment .highlight-red}
```{.markdown code-line-numbers="false"}
This is an [important sentence!]{.fragment .highlight-red}
```

::: {.fragment .fade-in}
::: {.fragment .highlight-red}
::: {.fragment .semi-fade-out}
Fade in > Turn red > Semi fade out
:::
:::
:::

. . .

```{.markdown code-line-numbers="false"}
::: {.fragment .fade-in}
::: {.fragment .highlight-red}
::: {.fragment .semi-fade-out}
Fade in > Turn red > Semi fade out
:::
:::
:::
```

## Slide Transition {transition="fade"}

:::{.r-fit-text}
fade
:::

:::{.aside}
```{.markdown code-line-numbers="false"}
## Slide Transition {transition="fade"}
```
:::

## Slide Transition {transition="slide"}

:::{.r-fit-text}
slide
:::

:::{.aside}
```{.markdown code-line-numbers="false"}
## Slide Transition {transition="slide"}
```
:::

## Slide Transition {transition="convex"}

:::{.r-fit-text}
convex
:::


:::{.aside}
```{.markdown code-line-numbers="false"}
## Slide Transition {transition="convex"}
```
:::

## Slide Transition {transition="concave"}

:::{.r-fit-text}
concave
:::


:::{.aside}
```{.markdown code-line-numbers="false"}
## Slide Transition {transition="concave"}
```
:::

## Slide Transition {transition="zoom"}

:::{.r-fit-text}
zoom
:::


:::{.aside}
```{.markdown code-line-numbers="false"}
## Slide Transition {transition="zoom"}
```
:::

## Slide Transition, global

```{.yaml code-line-numbers="false"}
---
title: "Presentation"
format:
  revealjs:
    transition: slide
    background-transition: fade
    transition-speed: fast
---
```

## Column layout

```{.markdown code-line-numbers="false"}
:::: {.columns}

::: {.column width="40%"}
Left column
:::

::: {.column width="60%"}
Right column
:::

::::
```

:::: {.columns}

::: {.column width="40%"}
Left column
:::

::: {.column width="60%"}
Right column
:::

::::



## Column layout

:::: {.columns}

::: {.column width="40%"}

```{r}
#| echo: fenced
#| eval: false
dplyr::glimpse(mtcars)
```
:::

::: {.column width="60%"}
```{r}
#| echo: false
dplyr::glimpse(mtcars)
```
:::

::::

## Output location, `column-fragment`

```{r}
#| echo: fenced
#| output-location: column-fragment
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Output location, `column`

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Output location, `fragment`

```{r}
#| echo: fenced
#| output-location: fragment
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Output location, `slide`

```{r}
#| echo: fenced
#| output-location: slide
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Code line-highlighting

Use `#| code-line-numbers: "3"` syntax - will highlight line 3 and fade others

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "3"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Code line-highlighting

with a "fragment style"

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|3"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Code line-highlighting

highlight different line ranges progressively

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|3|5|8|10"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```



## Stack images

::: {.r-stack}
![](../img/kitten1.jpeg){.fragment width="450"}

![](../img/kitten2.jpeg){.fragment width="400"}

![](../img/kitten3.jpeg){.fragment width="300"}
:::

## Stack images

```{.markdown code-line-numbers="false"}
::: {.r-stack}
![](../img/kitten1.jpeg){.fragment width="450"}

![](../img/kitten2.jpeg){.fragment width="400"}

![](../img/kitten3.jpeg){.fragment width="300"}
:::
```

# Themes, Colors and other bling {background-color="#F06400"} 

## Background color and image  {background-color="red"} 

Background color:
```{.markdown code-line-numbers="false"}
## Background color and image  {background-color="red"} 
```

. . .

<br>

Background image:
```{.markdown code-line-numbers="false"}
## Background color and image  {background-image="<link-to-image>"} 
```

## Themes

see [https://quarto.org/docs/presentations/revealjs/themes.html](https://quarto.org/docs/presentations/revealjs/themes.html){preview-link="true"}

```{.yaml code-line-numbers="false"}
---
title: "Presentation"
format:
  revealjs: 
    theme: dark
---
```

. . .

```{.yaml code-line-numbers="false"}
---
title: "Presentation"
format:
  revealjs: 
    theme: beige
---
```

. . .

```{.yaml code-line-numbers="false"}
---
title: "Presentation"
format:
  revealjs: 
    theme: simple
---
```



## Themes via custom SASS

```{.yaml code-line-numbers="false"}
---
title: "Presentation"
format:
  revealjs: 
    theme: [default,custom.scss]
---
```

`custom.scss`:
```{.css code-line-numbers="false"}
/*-- scss:defaults --*/

$body-bg: #191919;
$body-color: #fff;
$link-color: #42affa;

/*-- scss:rules --*/

.reveal .slide blockquote {
  border-left: 3px solid $text-muted;
  padding-left: 0.5em;
}
```


## Themes via Extensions

Install Extension (**in the folder of your presentation**):
```{.bash code-line-numbers="false"}
quarto use template gesiscss/quarto-revealjs-fakegesis
```

. . .

<br>

use in yaml header:

```{.yaml code-line-numbers="false"}
---
title: "Let's make a presentation with Quarto"
author: "David Schoch"
lesson: 5
institute: GESIS
date: "2023-06-20"
date-format: "YYYY-MM-DD"
footer: "[Automated Reports & Co with Quarto and Markdown](https://gesiscss.github.io/quarto-workshop/)"
format: fakegesis-revealjs
---
```

. . .

Very creative themes can be found [here](https://quarto.org/docs/extensions/listing-revealjs.html){preview-link="true"}

## Examples

:::{.r-stack}
![](https://github.com/schochastics/quarto-blackboard-theme/raw/main/title.png){.fragment width=900}

![](https://github.com/schochastics/quarto-blackboard-theme/raw/main/ggplot.png){.fragment width=900}

![](https://user-images.githubusercontent.com/14034784/187721198-04400c7a-4432-4c90-9344-f1cf938be3b1.gif){.fragment width=900}
:::


##

<br><br><br>

:::{.r-fit-text}
[Give me more](https://quarto.org/docs/presentations/revealjs/){preview-link="true"}
:::

:::{.aside}
These slides are based on an [RStudio Workshop](https://rstudio-conf-2022.github.io/get-started-quarto/materials/05-presentations.html)
:::